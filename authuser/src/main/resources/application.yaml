server:
  port: 8081
  servlet:
    context-path: /ead-authuser

spring:
  application:
    name: ead-authuser-service
  config:
    import: 'optional:configserver:'
  cloud:
    config:
      discovery:
        service-id: ead-config-server
  datasource:
    url: jdbc:postgresql://localhost:5432/ead-authuser
    username: postgresuser
    password: postgrespwd
  jpa:
    hibernate:
      ddl-auto: update
      dialect: org.hibernate.dialect.PostgresSQLDialet
      jdbc:
        lob.non-contextual-creation: true
    properties:
      hibernate:
        show_sql: true
  rabbitmq:
    addresses: amqps://mtihecdc:z2qjgj7BT86LR9xlYUm4cTjHbTeckseh@woodpecker.rmq.cloudamqp.com/mtihecdc
  output:
    ansi:
      enabled: always

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka
  instance:
    hostname: localhost

resilience4j:
  circuitbreaker:
    instances:
      circuitbreakerInstance:
        slidingWindowSize: 30
        permittedNumberOfCallsInHalfOpenState: 2
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 2
        waitDurationInOpenState: 30s
        failureRateThreshold: 80
  retry:
    instances:
      retryInstance:
        maxRetryAttempts: 3
        waitDuration: 5s

logging:
  level:
    com.ead: TRACE
    root: INFO
    org.springframework.web: DEBUG
    org.hibernate: INFO

ead:
  api:
    url:
      course: http://ead-course-service/ead-course
  broker:
    exchange:
      userEvent: ead.userevent